func_main:
	push rbp
	mov rbp, rsp
	sub rsp, 0
	push rax
	call func_print
	add rsp, 8
	mov rax, 10
	mov rsp, rbp
	pop rbp
	ret
	mov rsp, rbp
	pop rbp
	xor rax, rax
	ret
global _start
_start:
	mov rbp, rsp
	mov rax, [rbp]
	add rax, 2
	shl rax, 3
	add rax, rbp
	push rax
	mov rax, rbp
	add rax, 8
	push rax
	mov rax, [rbp]
	push rax
	call func_main
	mov rdi, rax
	mov rax, 60
	syscall
func_print:
	mov rdi, [rsp+8]
	mov r9, -3689348814741910323
	sub rsp, 40
	mov byte [rsp+31], 10
	lea rcx, [rsp+30]
	mov qword rbx, 0
.L2:
	mov rax, rdi
	lea r8, [rsp+32]
	mul r9
	mov rax, rdi
	sub r8, rcx
	shr rdx, 3
	lea rsi, [rdx+rdx*4]
	add rsi, rsi
	sub rax, rsi
	add eax, 48
	mov byte [rcx], al
	mov rax, rdi
	mov rdi, rdx
	mov rdx, rcx
	sub rcx, 1
	cmp rax, 9
	ja .L2
	lea rax, [rsp+32]
	mov edi, 1
	sub rdx, rax
	xor eax, eax
	lea rsi, [rsp+32+rdx]
	mov rdx, r8
	mov rax, 1
	syscall
	add rsp, 40
	ret
